[Graph_Data]        
train_graph_file = GraphData/youtube.txt
N=1138499

;uncomment this if you want to check link prediction
origin_graph_file = GraphData/youtube.txt

;uncomment this if you want to check classification
label_file = GraphData/youtube-groups.txt

[Output]
;display the performance in every 2 epochs
display = 1
embedding_filename = youtube

;the chart of distance from centroid of embedding representations
;embed_chart = True

;the K for precision@k
check_reconstruction = 10,100,500,1000,10000,100000

;uncomment this if you want to check link prediction
check_link_prediction = 10,100,500,1000,10000,100000

;uncomment this if you want to check classification
check_classification = True

[Model_Setup]
;you can restore the model from an old one.
restore_model = ./result/youtube/epoch0.model

;the struct of the network, the -1 will be replaced with N automatically.
struct = -1,160
;struct = -1,5000,1000,100
sparse_reg = 0

;the loss func is  // gamma * L1 + alpha * L2 + reg * regularTerm //
alpha = 100
gamma = 1
reg = 1
lam = 0.01

;the weight balanced value to reconstruct non-zero element more.
beta = 10
        
batch_size = 16
epochs_limit = 100
learning_rate = 0.003

dbn_init = True
dbn_epochs = 200
dbn_batch_size = 64
dbn_learning_rate = 0.1

;negative sample ratio 
;if you want to do negative sampling, you should load data from txt file instead of mat file.
ng_sample_ratio = 0.0

